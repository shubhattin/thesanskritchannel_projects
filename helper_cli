#!/usr/bin/env python3

from rich import print
from rich.prompt import Prompt
import os
import sys

OPTIONS = [
    [
        "Generate Text JSON",
        [],
    ],
    ["Launch Local Server", ["pnpm dev"]],
    # ["Invalidate Text Data Cache", ["npx vite-node src/utils/text_data_invalidate.ts"]],
    ["Check Data Integrity", ["pnpm vitest run src/tests/check_data_shape.test.ts"]],
    ["Update Dependencies", ["pnpm i && uv sync "]],
]

TEXT_LIST = [
    ["Ramayanam", "ramayanam", 1, "get_json.py"],
    ["Bhagavad Gita", "bhagavadgita", 2, "extract.py"],
    ["Narayaneeyam", "narayaneeyam", 3, "extract.py"],
    ["Shiva Tandava Stotram", "shivatandavastotram", 4, "extract.py"],
    ["Saundarya Lahari", "saundaryalahari", 5, "extract.py"],
]


def generate_text_json_func(choice_index: int):
    command_info = TEXT_LIST[choice_index]
    command = (
        f'cd "data/{command_info[2]}. {command_info[1]}" && uv run {command_info[3]}'
    )
    os.system(command)


def generate_text_json_list():
    for i, option in enumerate(TEXT_LIST):
        print(f"[blue]{i+1}. {option[0]}[/]")
    print(f"[blue]e. Exit[/]")
    CHOICES = [str(i + 1) for i in range(len(TEXT_LIST))]
    CHOICES.append("e")
    choice = Prompt.ask("Choose Text", choices=CHOICES)
    if choice == "e":
        return
    generate_text_json_func(int(choice) - 1)


def main():
    if "--gen-json-all" in sys.argv[1:]:
        for i in range(len(TEXT_LIST)):
            generate_text_json_func(i)
            print(f"[bold]Generated [green]{TEXT_LIST[i][0]}[/][/]")
        return
    print("[bold yellow]Generate JSON Files for:[/]")
    for i, option in enumerate(OPTIONS):
        print(f"[blue]{i+1}. {option[0]}[/]")
    print(f"[blue]e. Exit[/]")
    CHOICES = [str(i + 1) for i in range(len(OPTIONS))]
    CHOICES.append("e")
    choice = Prompt.ask("Choose an option", choices=CHOICES)
    if choice == "e":
        return
    elif choice == "1":
        generate_text_json_list()
        return
    command_info = OPTIONS[int(choice) - 1]
    command = " && ".join(command_info[1])
    os.system(command)
    if len(command_info) == 3:
        print(command_info[2])


if __name__ == "__main__":
    main()
